# Creado por https://www.gitignore.io/api/aspnetcore
# Editar en https://www.gitignore.io/?templates=aspnetcore

### ASPNETCore ###
## Ignorar los archivos temporales de Visual Studio, generar resultados y
## archivos generados por complementos populares de Visual Studio.

# Archivos específicos del usuario
* .suo
*.usuario
* .userosscache
* .sln.docstates

# Archivos específicos del usuario (MonoDevelop / Xamarin Studio)
* .userprefs

# Resultados de construcción
[Dd] ebug /
[Dd] ebugPublic /
[Rr] elease /
[Rr] elimina /
x64 /
x86 /
bld /
[Bb] en /
[Oo] bj /
[Ll] og /

# Visual Studio 2015 directorio cache / options
.vs /
# Descomente si tiene tareas que crean los archivos estáticos del proyecto en wwwroot
# wwwroot /

# Resultados de la prueba MSTest
[Tt] est [Rr] esult * /
[Bb] uild [Ll] og. *

# NUNIT
* .VisualState.xml
TestResult.xml
bin/

# Construir resultados de un proyecto ATL
[Dd] ebugPS /
[Rr] eleasePS /
dlldata.c

# DNX
project.lock.json
project.fragment.lock.json
artefactos /

* _i.c
*_ordenador personal
* _i.h
* .ilk
*.meta
* .obj
* .pch
* .pdb
* .pgc
* .pgd
* .rsp
* .sbr
* .tlb
* .tli
* .tlh
* .tmp
* .tmp_proj
*.Iniciar sesión
* .vspscc
* .vssscc
construcciones
* .pidb
* .svclog
* .scc

# Chutzpah Test files
_Osadía*

# Visual C ++ archivos de caché
ipch /
* .aps
* .ncb
* .opendb
* .opensdf
* .sdf
* .cachefile
* .VC.db
* .VC.VC.opendb

# Visual Studio profiler
* .psess
* .vsp
* .vspx
*.savia

# TFS 2012 Espacio de trabajo local
$ tf /

# Kit de herramientas de automatización de orientación
* .gpState

# ReSharper es un complemento de codificación .NET
_ReSharper * /
*. [Rr] e [Ss] harper
* .DotSettings.user

# JustCode es un complemento de codificación .NET
.JustCode

# TeamCity es un complemento de compilación
_TeamCity *

# DotCover es una herramienta de cobertura de código
* .dotCover

# Resultados de la cobertura del código de Visual Studio
*.cobertura
* .coveragexml

# NCrunch
_NCrunch_ *
. * crunch * .local.xml
nCrunchTemp_ *

# MightyMoose
* .mm. *
AutoTest.Net/

# Banco de trabajo web (sass)
.sass-cache /

# Carpeta de salida de Installshield
[Ee] xpress /

# DocProject es un complemento generador de documentación
DocProject / buildhelp /
DocProject / Help / *. HxT
DocProject / Help / *. HxC
DocProject / Help / *. Hhc
DocProject / Help / *. Hhk
DocProject / Help / *. Hhp
DocProject / Ayuda / Html2
DocProject / Help / html

# Directorio Click-Once
publicar/

# Publicar salida web
*. [Pp] ublish.xml
* .azurePubxml
# TODO: comente la siguiente línea si desea registrar la configuración de implementación web
# pero las cadenas de conexión de la base de datos (con posibles contraseñas) no se cifrarán
* .pubxml
* .publishproj

# Configuración de publicación de la aplicación web Microsoft Azure. Comenta la siguiente línea si quieres
# registrar la configuración de publicación de la aplicación web de Azure, pero contiene información confidencial
# en estos scripts no estarán encriptados
PublishScripts /

# Paquetes NuGet
* .nupkg
# La carpeta de paquetes se puede ignorar debido a Restaurar paquete
** / paquetes / *
# excepto build /, que se usa como un objetivo de MSBuild.
!** / packages / build /
# Descomente si es necesario, pero generalmente se regenerará cuando sea necesario
#! ** / packages / repositories.config
# Los archivos project.json de NuGet v3 producen archivos más ignorables
* .nuget.props
* .nuget.targets

# Salida de compilación de Microsoft Azure
csx /
* .build.csdef

# Microsoft Azure Emulator
ecf /
rcf /

# Directorios y archivos de paquetes de aplicaciones de la Tienda Windows
AppPackages /
BundleArtifacts /
Package.StoreAssociation.xml
_pkginfo.txt

# Archivos de caché de Visual Studio
# los archivos que terminan en .cache pueden ignorarse
*. [Cc] dolor
# pero realiza un seguimiento de los directorios que terminan en .cache
!*. [Cc] dolor /

# Otros
ClientBin /
~ $ *
* ~
* .dbmdl
* .dbproj.schemaview
* .jfm
* .pfx
* .publishsettings
node_modules /
.scannerwork /
.scannerwork/
scannerwork/
scannerwork
orleans.codegen.cs

# Dado que hay múltiples flujos de trabajo, elimine el comentario de la siguiente línea para ignorar bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
# bower_components /

# Proyectos RIA / Silverlight
Código_generado /

# Copia de seguridad y archivos de informe de convertir un archivo de proyecto antiguo
# a una versión más nueva de Visual Studio. No se necesitan archivos de respaldo,
# porque tenemos git ;-)
_UpgradeReport_Files /
Apoyo*/
UpgradeLog * .XML
UpgradeLog * .htm

# Archivos de SQL Server
* .mdf
* .ldf

# Proyectos de inteligencia empresarial
* .rdl.data
* .bim.layout
* .bim _ *. configuración

# Microsoft falsifica
FakesAssemblies /

# Archivo de configuración del complemento GhostDoc
* .GhostDoc.xml

# Node.js Herramientas para Visual Studio
.ntvs_analysis.dat

# Visual Studio 6 registro de compilación
* .plg

# Visual Studio 6 archivo de opciones de espacio de trabajo
*.optar

# Salida de compilación de Visual Studio LightSwitch
** / *. HTMLClient / GeneratedArtifacts
** / *. DesktopClient / GeneratedArtifacts
** / *. DesktopClient / ModelManifest.xml
** / *. Servidor / Artefactos Generados
** / *. Server / ModelManifest.xml
_Pvt_Extensions

# Gerente de dependencia de paquetes
.paket / paket.exe
paket-files /

# FALSO - F # Hacer
.falso/

# JetBrains Rider
.idea/
* .sln.iml

# CodeRush
.cr /

# Herramientas de Python para Visual Studio (PTVS)
__pycache __ /
* .pyc

# Cake: descomenta si lo estás usando
# herramientas/

# Fin de https://www.gitignore.io/api/aspnetcore
*.min.css
*.min.js
*.map
_build/
_site/
Properties/
*.sln

Project_Readme.html
*.suo
*.user
*.userosscache
*.sln.docstates
.vscode/
!.vscode/extensions.json
!.vscode/settings.json
# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
build/
bld/
[Bb]in/
[Oo]bj/

# Visual Studo 2015 cache/options directory
.vs/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUNIT
*.VisualState.xml


# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/


*_i.c
*_p.c
*_i.h
*.ilk

*.obj
*.pch
*.pdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opensdf
*.sdf
*.cachefile

# Visual Studio profiler
*.psess
*.vsp
*.vspx

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# JustCode is a .NET coding addin-in


# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# NCrunch
_NCrunch_*
.*crunch*.local.xml

# MightyMoose
*.mm.*


# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# TODO: Comment the next line if you want to checkin your web deploy settings 
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# NuGet Packages
*.nupkg
# The packages folder can be ignored because of Package Restore
**/packages/*
# except build/, which is used as an MSBuild target.
!**/packages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/packages/repositories.config

# Windows Azure Build Output
csx/
*.build.csdef

# Windows Store app package directory
AppPackages/

# Others
*.[Cc]ache
ClientBin/
[Ss]tyle[Cc]op.*
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.pfx
*.publishsettings
node_modules/
bower_components/

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm

# SQL Server files
*.mdf
*.ldf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings

# Microsoft Fakes
FakesAssemblies/

# Node.js Tools for Visual Studio


# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt


__pycache__/

#Mac OSX 
.DS_Store

# Windows thumbnail cache files
Thumbs.db

bin
obj
packages

HELP.md
target/
!.mvn/wrapper/maven-wrapper.jar
!**/src/main/**
!**/src/test/**

### STS ###
.apt_generated
.classpath
.factorypath
.project
.settings
.springBeans
.sts4-cache

### IntelliJ IDEA ###
.idea
*.iws
*.iml
*.ipr

### NetBeans ###
/nbproject/private/
/nbbuild/
/dist/
/nbdist/
/.nb-gradle/


### VS Code ###



### Code-Java ###
# Language Support for Java(TM) by Red Hat extension for Visual Studio Code - https://marketplace.visualstudio.com/items?itemName=redhat.java


factoryConfiguration.json

### Java ###
# Compiled class file
*.class

# Log file


# BlueJ files
*.ctxt

# Mobile Tools for Java (J2ME)
.mtj.tmp/

# Package Files #
*.jar
*.war
*.nar
*.ear
*.zip
*.tar.gz
*.rar


*.java.hsp
*.sonarj
*.sw*

build.sh
integration-repo
ivy-cache
jxl.log
jmx.log
derby.log
spring-test/test-output/
.gradle
argfile*

activemq-data/

classes/
/build
buildSrc/build
/spring-*/build
/spring-core/kotlin-coroutines/build
/framework-bom/build
/integration-tests/build
/src/asciidoc/build


# Eclipse artifacts, including WTP generated manifests

spring-*/src/main/java/META-INF/MANIFEST.MF

# IDEA artifacts and output dirs

out
test-output
atlassian-ide-plugin.xml
.gradletasknamecache


pom.xml.tag
pom.xml.releaseBackup
pom.xml.versionsBackup
pom.xml.next
release.properties
dependency-reduced-pom.xml
buildNumber.properties
.mvn/timing.properties


# Maven
log/


**/target/


# Avoid ignoring Maven wrapper jar file (.jar files are usually ignored)
!/.mvn/wrapper/maven-wrapper.jar

Backend/demo1/mvnw
Backend/demo1/mvnw.cmd
mvnw
mvnw.cmd
demo1/mvnw.cmd
demo1/mvnw
Backend/demo1/.mvn
.mvn



# Created by https://www.gitignore.io/api/node
# Edit at https://www.gitignore.io/?templates=node

### Node ###
# Logs
logs

npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories

jspm_packages/

# TypeScript v1 declaration files
typings/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.test

# parcel-bundler cache (https://parceljs.org/)
.cache

# next.js build output
.next

# nuxt.js build output
.nuxt

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

coverage/



output
steps.md



# End of https://www.gitignore.io/api/node
